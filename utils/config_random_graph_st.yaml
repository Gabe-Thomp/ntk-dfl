# Alpha=0.5 w/ random, time-dependent topology
# Testing out new hyperparameters for local SGD
# - 5 epochs
# - 0.005 learning rate
# - 32 batch size

# device: "cuda" | "cpu"
device: cuda
debug: true
gpu_intensive: true

# distributed networks
# users:            number of users
rounds: 1
users: 20

# Selects 20 per round
part_rate: 1.0 #0.07

# Select p for Erdos-Renyi graph
# users*p is the mean number of edges per node
# Mean 9 users per node
p: 0.015


sgd_epochs: 5
sgd_lr: 0.005
sgd_batch_size: 16

self_train: "sgd"

topology: "random"

train_on_own_data: false
own_data_all_rounds: false

graph_name: null
verbose: true

record_path: null

lr: 0.01
# Hard coded based on training data set size. For example, 60000 fashion mnist images/300 users = 200 batch size
# I think this only applies to 
local_batch_size: 200

# Whether or not weights should be initialized to the same value for each client originally
same_init: true

loss: "ce"

taus:
- 100
- 200
- 300 
- 400
- 500
- 600
- 800

# Dataset configurations
train_data_dir: data/fmnist/train.dat
test_data_dir:  data/fmnist/test.dat

# I think user_with_data is the file that contains the user data parsed into non IID segments already
# This file is alpha0.1 

# user_with_data: "data/user_with_data/fmnist300/a0.5/user_dataidx_map_0.50_0.dat"
# iid: false

user_with_data: ""
iid: true

datapoint_size:
- 28
- 28
channels: 1
label_size: 10

# Log and record configurations
record_dir:  "trial17/{}.dat"
log_level:   "INFO"
log_file:    "records/trial17/train.log"

model: "mlp"
full_weight_dir: ""

